{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Teselas vectoriales para hackat\u00f3 ATM Bienvenidos al taller de teselas vectoriales y Mapbox GL. Estos apuntes est\u00e1n publicados aqu\u00ed: https://geoinquiets.github.io/vt-hackato-atm/ Autores Wladimir Szczerban (alias Bolo) @bolosig , geostarter (ICGC) Oscar Fonts @oscarfonts , desarrollador freelance en geomati.co Y ambos somos geoinquiets ! Condiciones de reutilizaci\u00f3n de estos apuntes Estos materiales est\u00e1n publicados bajo licencia CreativeCommons (by-sa) 4.0 internacional Usted es libre de: Compartir \u2014 copiar y redistribuir el material en cualquier medio o formato Adaptar \u2014 remezclar, transformar y crear a partir del material para cualquier finalidad, incluso comercial. Bajo las condiciones siguientes: Reconocimiento \u2014 Debe reconocer adecuadamente la autor\u00eda, proporcionar un enlace a la licencia e indicar si se han realizado cambios. Puede hacerlo de cualquier manera razonable, pero no de una manera que sugiera que tiene el apoyo del licenciador o lo recibe por el uso que hace. CompartirIgual \u2014 Si remezcla, transforma o crea a partir del material, deber\u00e1 difundir sus contribuciones bajo la misma licencia que el original. No hay restricciones adicionales \u2014 No puede aplicar t\u00e9rminos legales o medidas tecnol\u00f3gicas que legalmente restrinjan realizar aquello que la licencia permite. Danger Requisito imprescindible es tener un navegador con capacidades WebGL. Versi\u00f3n ampliada Versi\u00f3n completa del taller, de 4 horas, donde se detalla c\u00f3mo crear y servir teselas vectoriales en nuestros propios servidores, sin depender de una cuenta de Mapbox: https://geoinquiets.github.io/taller-vt/","title":"Home"},{"location":"#teselas-vectoriales-para-hackato-atm","text":"Bienvenidos al taller de teselas vectoriales y Mapbox GL. Estos apuntes est\u00e1n publicados aqu\u00ed:","title":"Teselas vectoriales para hackat\u00f3 ATM"},{"location":"#httpsgeoinquietsgithubiovt-hackato-atm","text":"","title":"https://geoinquiets.github.io/vt-hackato-atm/"},{"location":"#autores","text":"Wladimir Szczerban (alias Bolo) @bolosig , geostarter (ICGC) Oscar Fonts @oscarfonts , desarrollador freelance en geomati.co Y ambos somos geoinquiets ! Condiciones de reutilizaci\u00f3n de estos apuntes Estos materiales est\u00e1n publicados bajo licencia CreativeCommons (by-sa) 4.0 internacional Usted es libre de: Compartir \u2014 copiar y redistribuir el material en cualquier medio o formato Adaptar \u2014 remezclar, transformar y crear a partir del material para cualquier finalidad, incluso comercial. Bajo las condiciones siguientes: Reconocimiento \u2014 Debe reconocer adecuadamente la autor\u00eda, proporcionar un enlace a la licencia e indicar si se han realizado cambios. Puede hacerlo de cualquier manera razonable, pero no de una manera que sugiera que tiene el apoyo del licenciador o lo recibe por el uso que hace. CompartirIgual \u2014 Si remezcla, transforma o crea a partir del material, deber\u00e1 difundir sus contribuciones bajo la misma licencia que el original. No hay restricciones adicionales \u2014 No puede aplicar t\u00e9rminos legales o medidas tecnol\u00f3gicas que legalmente restrinjan realizar aquello que la licencia permite. Danger Requisito imprescindible es tener un navegador con capacidades WebGL.","title":"Autores"},{"location":"#version-ampliada","text":"Versi\u00f3n completa del taller, de 4 horas, donde se detalla c\u00f3mo crear y servir teselas vectoriales en nuestros propios servidores, sin depender de una cuenta de Mapbox: https://geoinquiets.github.io/taller-vt/","title":"Versi\u00f3n ampliada"},{"location":"1_teoria/","text":"Qu\u00e9 son las teselas vectoriales Presentaci\u00f3n Ver este cap\u00edtulo en formato presentaci\u00f3n Las teselas vectoriales son un formato de datos liviano para almacenar datos vectoriales geoespaciales, como puntos, l\u00edneas y pol\u00edgonos. Las teselas vectoriales codifican informaci\u00f3n geogr\u00e1fica de acuerdo con la especificaci\u00f3n de teselas vector de Mapbox. La especificaci\u00f3n de Mapbox es un est\u00e1ndar abierto bajo una licencia Creative Commons Attribution 3.0 US. Una tesela vectorial (vector tiles) contiene datos vectoriales georreferenciados (puede contener m\u00faltiples capas), recortados en teselas para facilitar su recuperaci\u00f3n. Son equivalentes a las teselas raster tradicionales (WMTS, TMS) pero retornan datos vectoriales en lugar de una imagen. Cada conjunto de teselas vectoriales tiene su propio esquema. Un esquema consiste en nombres de capas, atributos, selecci\u00f3n de elementos, etc. No existe un esquema que sirva para todo. Existen varios esquemas como por ejemplo: OpenMapTiles, Mapbox Streets, etc. Warning Las teselas vectoriales no son un formato de datos vectoriales estilo Shapefile, GeoJSON, etc. pensado para trabajar (hacer an\u00e1lisis, explotaci\u00f3n de datos, etc.) sino que est\u00e1 pensado y enfocado principalmente en la visualizaci\u00f3n. Un poco de Historia Fechas destacadas 1966 Sistema de Informaci\u00f3n Geogr\u00e1fica de Canad\u00e1 (CGIS) utiliza \u201cmarco\u201d para almacenar informaci\u00f3n 1975 Servicio de Vida Silvestre EE.UU. utiliza \u201cgeounit\u201d para almacenar datos Finales de 1980 teselas se vuelven \u201cinvisibles\u201d para el usuario final. Manejo de datos continuo Abril 2014 Mapbox saca la version 1.0 de la especificaci\u00f3n Mapbox Vector Tile Existe una larga historia de uso de teselas vectoriales en SIG. En 1966 el Sistema de Informaci\u00f3n Geogr\u00e1fica de Canad\u00e1 (CGIS), utilizaba un esquema de almacenamiento vectorial que permit\u00eda a las computadoras de recursos limitados acceder de manera eficiente y procesar datos de mapas vectoriales. CGIS us\u00f3 el t\u00e9rmino \"marco\" en lugar de teselas vectoriales. En 1975, el Servicio de Vida Silvestre de los EE.UU. inici\u00f3 un programa nacional para mapear y digitalizar todos los humedales de los EE.UU. En 1976 desarrollan un software que se llam\u00f3 WAMS (Wetlands Analytical Mapping System). El almacenage de datos del WAMS usaba una estructura de teselas vectorial. Cada tesela se llamaba \"geounit\". Una geounit correspond\u00eda a una de las escalas cuadrangulares del USGS, generalmente 1:24000. En 1986 bas\u00e1ndose en la experiencia operativa adquirida en la implementaci\u00f3n y el uso de WAMS y del Map Overlay and Statistical System (MOSS), se lanz\u00f3 un SIG comercial DeltaMap (m\u00e1s tarde GenaMap) basado en UNIX que implement\u00f3 una estructura mejorada de almacenamiento y acceso de teselas vectores. DeltaMap permiti\u00f3 al usuario definir cualquier tama\u00f1o de tesela en cualquier sistema de referencia de coordenadas (CRS). De esta forma, los datos dispersos requer\u00edan solo unas pocas teselas, mientras que los datos densos pod\u00edan usar teselas mucho m\u00e1s peque\u00f1as. Utilizaban R-trees como el esquema de indexaci\u00f3n para las teselas de vectores. A finales de la d\u00e9cada de 1980, se mejor\u00f3 a\u00fan m\u00e1s GenaMap para permitir el procesamiento \"continuo e ininterrumpido\" de las capas de teselas. B\u00e1sicamente, desde la perspectiva del usuario final, las teselas se volvieron invisibles. [^1] [^1] https://en.wikipedia.org/wiki/Vector_tiles Abril de 2014 Mapbox saca la version 1.0 de la especificaci\u00f3n Mapbox Vector Tile (MVT). Diciembre 2015 versi\u00f3n 2.0 de la especificaci\u00f3n MVT. Marzo de 2015 ESRI (el que no debe ser nombrado) anuncia que soportar\u00e1 MVT. Mapbox actualmente est\u00e1 trabajando en la versi\u00f3n 3. Diferencias entre teselas raster y teselas vectoriales Teselas vectoriales Teselas raster Estilo se define en el cliente Estilo se define en el servidor S\u00f3lo se necesita teselar la informaci\u00f3n una sola vez y se pueden tener m\u00faltiples mapas Hay que teselas la informaci\u00f3n para cada mapa Overzoom se mantiene resoluci\u00f3n Overzoom pierde resoluci\u00f3n (pixelado) Menor tama\u00f1o (se recomienda m\u00e1ximo 500kb) M\u00e1s f\u00e1ciles de consumir Cache ocupa mucho menos espacio. F\u00e1ctible el uso en dispositivos m\u00f3viles sin conexi\u00f3n Cache ocupa mucho espacio. Uso en dispositivos m\u00f3viles requiere mucho espacio de disco Acceso nativo a la informaci\u00f3n del objeto (atributos y geometr\u00eda), lo que permite un procesamiento muy sofisticado Se ven mejor en dispositivos de alta resoluci\u00f3n Comparativa pesos teselas vector vs raster. Fuente https://plot.ly/~mourner/118.embed Comparaci\u00f3n con otros formatos Teselas Vectoriales WMS WMTS WFS Nivel de zoom continuo Nivel de zoom continuo Nivel de zoom discreto Nivel de zoom continuo Teselado No teselado, con lo cual no hay problemas de etiquetas Teselado No teselado Retorna datos en vector modificados (generalizados, simplificados) Retorna imagen raster Retorna imagen raster Retorna datos en vector sin modificar Cache tanto en cliente como en servidor No cache Cache tanto en cliente como en servidor No cache Escalabilidad Escalabilidad Interactivo No interactivo (se pueden hacer consultas getFeatureInfo) No interactivo Interactivo Estilo flexible (cliente es quien define el estilo) Estilo fijo (se puede modificar via SLD pero lo renderiza el servidor) Estilo fijo (definido en el servidor) Estilo flexible Impresi\u00f3n Hi-DPI Impresi\u00f3n problemas con Hi-DPI Dif\u00edcil impresi\u00f3n (montar el mosaico de im\u00e1ges y problemas con Hi-DPI) Impresi\u00f3n Hi-DPI C\u00f3mo est\u00e1n hechas por dentro Las geometr\u00edas y los atributos se codifican como datos binarios de Google Protobuf (PBF). Codificar geometr\u00edas Para codificar informaci\u00f3n geogr\u00e1fica en una tesela vectorial, una herramienta debe convertir las coordenadas geogr\u00e1ficas, como la latitud y la longitud, en coordenadas vectoriales de cuadr\u00edculas. Las teselas de vectoriales no tienen ning\u00fan concepto de informaci\u00f3n geogr\u00e1fica. Codifican puntos, l\u00edneas y pol\u00edgonos como pares x/y relativos a la esquina superior izquierda de la cuadr\u00edcula de forma descendente. Las geometr\u00edas son transformadas a una sola tesela, con un sistema de coordenadas de p\u00edxel local, que por defecto va de la esquina superior izquierda (0,0) a la esquina inferior derecha (4096,4096). Codificar geometr\u00eda. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-geom Codificar atributos Los atributos se codifican como un conjunto \u00fanico de claves (algo as\u00ed como un esquema de campos de capa) y la lista de sus valores. Los atributos est\u00e1n codificados en una serie de etiquetas que existen dentro de un elemento en el vector que tienen valores enteros que hacen referencia a las claves y los valores que provienen de la geometr\u00eda. Esto elimina la redundancia de los atributos para geometr\u00edas que tienen las mismas claves y valores similares. Codificar atributos. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-attr Winding order El Winding order (direcci\u00f3n de digitalizaci\u00f3n) se refiere a la direcci\u00f3n en que se dibuja un anillo en un mosaico vectorial, ya sea en sentido horario o antihorario. Muchas geometr\u00edas son multipol\u00edgonos con \"agujeros\", que tambi\u00e9n se representan como anillos de pol\u00edgono. Es importante poder inferir el orden al extraer datos fuente de un mosaico vectorial y comprender si la geometr\u00eda es parte de un pol\u00edgono m\u00faltiple o un pol\u00edgono \u00fanico. Para que los procesadores distingan de manera apropiada que pol\u00edgonos son agujeros y cu\u00e1les son geometr\u00edas \u00fanicas, la especificaci\u00f3n requiere que todos los pol\u00edgonos sean v\u00e1lidos (validez de OGC). Cualquier anillo interior poligonal debe orientarse con el orden opuesto al de su anillo exterior principal y todos los anillos interiores deben seguir directamente el anillo exterior al que pertenecen. Los anillos exteriores deben estar orientados en el sentido de las agujas del reloj y los anillos interiores deben estar orientados en sentido contrario a las agujas del reloj. Winding order. Fuente https://www.mapbox.com/vector-tiles/specification/#winding-order Diferentes especificaciones y conceptos relacionados con las teselas vectoriales pbf Protocol buffers desarrollado por Google (para uso interno) es un m\u00e9todo para serializar datos estructurados. Es language-neutral , platform-neutral y en cuyo objetivo de dise\u00f1o enfatizaron la simplicidad y el rendimiento. El m\u00e9todo implica un lenguaje de descripci\u00f3n de interfaz que describe la estructura de algunos datos y un programa que genera c\u00f3digo fuente a partir de esa descripci\u00f3n para generar o analizar una secuencia de bytes que representa los datos estructurados. mvt Formato binario basado en la especificaci\u00f3n de Mapbox que usa pbf para serializar datos geogr\u00e1ficos. Los archivos deber\u00edan tener extensi\u00f3n .mvt pero no es obligatorio as\u00ed que se pueden encontrar archivos con extensi\u00f3n .pbf, .vector.pbf o .mvt.gz (compresi\u00f3n gzip) Por ejemplo un conjunto de teselas mvt almacenadas en un SQLite siguiendo una esquema espec\u00edfico formar\u00eda un MBTiles. MBTiles MBTiles es un formato de archivo para almacenar conjuntos de teselas. Est\u00e1 dise\u00f1ado para que pueda empaquetar los potencialmente miles de archivos que componen un conjunto de teselas y moverlos, usarlos en una aplicaci\u00f3n web o m\u00f3vil. MBTiles es una especificaci\u00f3n abierta y se basa en la base de datos SQLite. MBTiles puede contener conjunto de teselas reaster y/o vector. MBTiles es una especificaci\u00f3n compacta y restrictiva. S\u00f3lo admite datos teselados, incluidas teselas vectoriales o de im\u00e1genes y UTFGrid (hasta la versi\u00f3n 1.2). S\u00f3lo la proyecci\u00f3n esf\u00e9rica de Mercator es soportada para la presentaci\u00f3n (visualizaci\u00f3n) y s\u00f3lo se admiten coordenadas de latitud y longitud para metadatos, como l\u00edmites y centros. Es una especificaci\u00f3n m\u00ednima, que sol\u00f3 especifica las formas en que los datos deben ser recuperables. Por lo tanto, los archivos MBTiles pueden comprimir y optimizar datos internamente, y construir vistas que se adhieren a la especificaci\u00f3n MBTiles. Dentro del MBtiles los vectores estan almacenados comprimidos (gzip) y en formato pbf. A diferencia de Spatialite, GeoJSON y Rasterlite, MBTiles no es un almacenamiento de datos sin formato. Es almacenamiento de datos en teselas. tilejson TileJSON es un formato para describir un conjunto de teselas. Realiza un seguimiento de d\u00f3nde solicitar el conjunto de teselas, el nombre del conjunto de teselas y cualquier atribuci\u00f3n que sea necesaria al utilizar el conjunto de teselas. Esta especificaci\u00f3n intenta crear un est\u00e1ndar para representar metadatos sobre m\u00faltiples tipos de capas, para ayudar a los clientes en la configuraci\u00f3n y navegaci\u00f3n. Overzoom Overzooming es una t\u00e9cnica espec\u00edfica de teselas vectorial que permite que una tesela se represente m\u00e1s all\u00e1 de su nivel de zoom previsto, por lo que contin\u00faa siendo visible en el mapa. Si un conjunto de teselas tiene un minzoom de 6 y un maxzoom de 12, esos son los rangos v\u00e1lidos calculados por el generador de teselas. Si ampliara el mapa m\u00e1s all\u00e1 del nivel de zoom 12, el renderizador del mapa puede seguir utilizando los datos del zoom 12 escalando los datos del vector hacia arriba. Esto, por supuesto, puede dar lugar a grandes simplificaciones de datos si las geometr\u00edas se representan demasiado por encima de su nivel real de detalle. Las teselas raster pierden claridad si ocurre overzoom. Por ejemplo, si est\u00e1 visualizando un conjunto de teselas raster con una extensi\u00f3n de zoom entre z0 y z6, si hace un zoom a un nivel de zoom m\u00e1s alto despu\u00e9s de z6, las im\u00e1genes se volver\u00e1n borrosas y dif\u00edciles de ver. Los efectos del overzoom no son tan notables con las teselas vector, ya que los datos vectoriales no se almacenan en un formato basado en p\u00edxeles, sino que se codifican y calculan a partir de una serie de puntos, l\u00edneas y pol\u00edgonos. Overzoom nivel zoom 16 vs nivel zoom 19. Presentaci\u00f3n de ejemplos visuales hechos con vt Terreno https://openicgc.github.io/ Luces LA Edificios con m\u00fasica https://codepen.io/jwhazel/pen/NYzpWG blog explicativo https://medium.com/@erdag/mappox-mapmadness18-round-4-1251a8c10421 Tem\u00e1tico filtro Filtrado al vuelo Mapa de calor","title":"1. Qu\u00e9 son"},{"location":"1_teoria/#que-son-las-teselas-vectoriales","text":"Presentaci\u00f3n Ver este cap\u00edtulo en formato presentaci\u00f3n Las teselas vectoriales son un formato de datos liviano para almacenar datos vectoriales geoespaciales, como puntos, l\u00edneas y pol\u00edgonos. Las teselas vectoriales codifican informaci\u00f3n geogr\u00e1fica de acuerdo con la especificaci\u00f3n de teselas vector de Mapbox. La especificaci\u00f3n de Mapbox es un est\u00e1ndar abierto bajo una licencia Creative Commons Attribution 3.0 US. Una tesela vectorial (vector tiles) contiene datos vectoriales georreferenciados (puede contener m\u00faltiples capas), recortados en teselas para facilitar su recuperaci\u00f3n. Son equivalentes a las teselas raster tradicionales (WMTS, TMS) pero retornan datos vectoriales en lugar de una imagen. Cada conjunto de teselas vectoriales tiene su propio esquema. Un esquema consiste en nombres de capas, atributos, selecci\u00f3n de elementos, etc. No existe un esquema que sirva para todo. Existen varios esquemas como por ejemplo: OpenMapTiles, Mapbox Streets, etc. Warning Las teselas vectoriales no son un formato de datos vectoriales estilo Shapefile, GeoJSON, etc. pensado para trabajar (hacer an\u00e1lisis, explotaci\u00f3n de datos, etc.) sino que est\u00e1 pensado y enfocado principalmente en la visualizaci\u00f3n.","title":"Qu\u00e9 son las teselas vectoriales"},{"location":"1_teoria/#un-poco-de-historia","text":"Fechas destacadas 1966 Sistema de Informaci\u00f3n Geogr\u00e1fica de Canad\u00e1 (CGIS) utiliza \u201cmarco\u201d para almacenar informaci\u00f3n 1975 Servicio de Vida Silvestre EE.UU. utiliza \u201cgeounit\u201d para almacenar datos Finales de 1980 teselas se vuelven \u201cinvisibles\u201d para el usuario final. Manejo de datos continuo Abril 2014 Mapbox saca la version 1.0 de la especificaci\u00f3n Mapbox Vector Tile Existe una larga historia de uso de teselas vectoriales en SIG. En 1966 el Sistema de Informaci\u00f3n Geogr\u00e1fica de Canad\u00e1 (CGIS), utilizaba un esquema de almacenamiento vectorial que permit\u00eda a las computadoras de recursos limitados acceder de manera eficiente y procesar datos de mapas vectoriales. CGIS us\u00f3 el t\u00e9rmino \"marco\" en lugar de teselas vectoriales. En 1975, el Servicio de Vida Silvestre de los EE.UU. inici\u00f3 un programa nacional para mapear y digitalizar todos los humedales de los EE.UU. En 1976 desarrollan un software que se llam\u00f3 WAMS (Wetlands Analytical Mapping System). El almacenage de datos del WAMS usaba una estructura de teselas vectorial. Cada tesela se llamaba \"geounit\". Una geounit correspond\u00eda a una de las escalas cuadrangulares del USGS, generalmente 1:24000. En 1986 bas\u00e1ndose en la experiencia operativa adquirida en la implementaci\u00f3n y el uso de WAMS y del Map Overlay and Statistical System (MOSS), se lanz\u00f3 un SIG comercial DeltaMap (m\u00e1s tarde GenaMap) basado en UNIX que implement\u00f3 una estructura mejorada de almacenamiento y acceso de teselas vectores. DeltaMap permiti\u00f3 al usuario definir cualquier tama\u00f1o de tesela en cualquier sistema de referencia de coordenadas (CRS). De esta forma, los datos dispersos requer\u00edan solo unas pocas teselas, mientras que los datos densos pod\u00edan usar teselas mucho m\u00e1s peque\u00f1as. Utilizaban R-trees como el esquema de indexaci\u00f3n para las teselas de vectores. A finales de la d\u00e9cada de 1980, se mejor\u00f3 a\u00fan m\u00e1s GenaMap para permitir el procesamiento \"continuo e ininterrumpido\" de las capas de teselas. B\u00e1sicamente, desde la perspectiva del usuario final, las teselas se volvieron invisibles. [^1] [^1] https://en.wikipedia.org/wiki/Vector_tiles Abril de 2014 Mapbox saca la version 1.0 de la especificaci\u00f3n Mapbox Vector Tile (MVT). Diciembre 2015 versi\u00f3n 2.0 de la especificaci\u00f3n MVT. Marzo de 2015 ESRI (el que no debe ser nombrado) anuncia que soportar\u00e1 MVT. Mapbox actualmente est\u00e1 trabajando en la versi\u00f3n 3.","title":"Un poco de Historia"},{"location":"1_teoria/#diferencias-entre-teselas-raster-y-teselas-vectoriales","text":"Teselas vectoriales Teselas raster Estilo se define en el cliente Estilo se define en el servidor S\u00f3lo se necesita teselar la informaci\u00f3n una sola vez y se pueden tener m\u00faltiples mapas Hay que teselas la informaci\u00f3n para cada mapa Overzoom se mantiene resoluci\u00f3n Overzoom pierde resoluci\u00f3n (pixelado) Menor tama\u00f1o (se recomienda m\u00e1ximo 500kb) M\u00e1s f\u00e1ciles de consumir Cache ocupa mucho menos espacio. F\u00e1ctible el uso en dispositivos m\u00f3viles sin conexi\u00f3n Cache ocupa mucho espacio. Uso en dispositivos m\u00f3viles requiere mucho espacio de disco Acceso nativo a la informaci\u00f3n del objeto (atributos y geometr\u00eda), lo que permite un procesamiento muy sofisticado Se ven mejor en dispositivos de alta resoluci\u00f3n Comparativa pesos teselas vector vs raster. Fuente https://plot.ly/~mourner/118.embed","title":"Diferencias entre teselas raster y teselas vectoriales"},{"location":"1_teoria/#comparacion-con-otros-formatos","text":"Teselas Vectoriales WMS WMTS WFS Nivel de zoom continuo Nivel de zoom continuo Nivel de zoom discreto Nivel de zoom continuo Teselado No teselado, con lo cual no hay problemas de etiquetas Teselado No teselado Retorna datos en vector modificados (generalizados, simplificados) Retorna imagen raster Retorna imagen raster Retorna datos en vector sin modificar Cache tanto en cliente como en servidor No cache Cache tanto en cliente como en servidor No cache Escalabilidad Escalabilidad Interactivo No interactivo (se pueden hacer consultas getFeatureInfo) No interactivo Interactivo Estilo flexible (cliente es quien define el estilo) Estilo fijo (se puede modificar via SLD pero lo renderiza el servidor) Estilo fijo (definido en el servidor) Estilo flexible Impresi\u00f3n Hi-DPI Impresi\u00f3n problemas con Hi-DPI Dif\u00edcil impresi\u00f3n (montar el mosaico de im\u00e1ges y problemas con Hi-DPI) Impresi\u00f3n Hi-DPI","title":"Comparaci\u00f3n con otros formatos"},{"location":"1_teoria/#como-estan-hechas-por-dentro","text":"Las geometr\u00edas y los atributos se codifican como datos binarios de Google Protobuf (PBF).","title":"C\u00f3mo est\u00e1n hechas por dentro"},{"location":"1_teoria/#codificar-geometrias","text":"Para codificar informaci\u00f3n geogr\u00e1fica en una tesela vectorial, una herramienta debe convertir las coordenadas geogr\u00e1ficas, como la latitud y la longitud, en coordenadas vectoriales de cuadr\u00edculas. Las teselas de vectoriales no tienen ning\u00fan concepto de informaci\u00f3n geogr\u00e1fica. Codifican puntos, l\u00edneas y pol\u00edgonos como pares x/y relativos a la esquina superior izquierda de la cuadr\u00edcula de forma descendente. Las geometr\u00edas son transformadas a una sola tesela, con un sistema de coordenadas de p\u00edxel local, que por defecto va de la esquina superior izquierda (0,0) a la esquina inferior derecha (4096,4096). Codificar geometr\u00eda. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-geom","title":"Codificar geometr\u00edas"},{"location":"1_teoria/#codificar-atributos","text":"Los atributos se codifican como un conjunto \u00fanico de claves (algo as\u00ed como un esquema de campos de capa) y la lista de sus valores. Los atributos est\u00e1n codificados en una serie de etiquetas que existen dentro de un elemento en el vector que tienen valores enteros que hacen referencia a las claves y los valores que provienen de la geometr\u00eda. Esto elimina la redundancia de los atributos para geometr\u00edas que tienen las mismas claves y valores similares. Codificar atributos. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-attr","title":"Codificar atributos"},{"location":"1_teoria/#winding-order","text":"El Winding order (direcci\u00f3n de digitalizaci\u00f3n) se refiere a la direcci\u00f3n en que se dibuja un anillo en un mosaico vectorial, ya sea en sentido horario o antihorario. Muchas geometr\u00edas son multipol\u00edgonos con \"agujeros\", que tambi\u00e9n se representan como anillos de pol\u00edgono. Es importante poder inferir el orden al extraer datos fuente de un mosaico vectorial y comprender si la geometr\u00eda es parte de un pol\u00edgono m\u00faltiple o un pol\u00edgono \u00fanico. Para que los procesadores distingan de manera apropiada que pol\u00edgonos son agujeros y cu\u00e1les son geometr\u00edas \u00fanicas, la especificaci\u00f3n requiere que todos los pol\u00edgonos sean v\u00e1lidos (validez de OGC). Cualquier anillo interior poligonal debe orientarse con el orden opuesto al de su anillo exterior principal y todos los anillos interiores deben seguir directamente el anillo exterior al que pertenecen. Los anillos exteriores deben estar orientados en el sentido de las agujas del reloj y los anillos interiores deben estar orientados en sentido contrario a las agujas del reloj. Winding order. Fuente https://www.mapbox.com/vector-tiles/specification/#winding-order","title":"Winding order"},{"location":"1_teoria/#diferentes-especificaciones-y-conceptos-relacionados-con-las-teselas-vectoriales","text":"","title":"Diferentes especificaciones y conceptos relacionados con las teselas vectoriales"},{"location":"1_teoria/#pbf","text":"Protocol buffers desarrollado por Google (para uso interno) es un m\u00e9todo para serializar datos estructurados. Es language-neutral , platform-neutral y en cuyo objetivo de dise\u00f1o enfatizaron la simplicidad y el rendimiento. El m\u00e9todo implica un lenguaje de descripci\u00f3n de interfaz que describe la estructura de algunos datos y un programa que genera c\u00f3digo fuente a partir de esa descripci\u00f3n para generar o analizar una secuencia de bytes que representa los datos estructurados.","title":"pbf"},{"location":"1_teoria/#mvt","text":"Formato binario basado en la especificaci\u00f3n de Mapbox que usa pbf para serializar datos geogr\u00e1ficos. Los archivos deber\u00edan tener extensi\u00f3n .mvt pero no es obligatorio as\u00ed que se pueden encontrar archivos con extensi\u00f3n .pbf, .vector.pbf o .mvt.gz (compresi\u00f3n gzip) Por ejemplo un conjunto de teselas mvt almacenadas en un SQLite siguiendo una esquema espec\u00edfico formar\u00eda un MBTiles.","title":"mvt"},{"location":"1_teoria/#mbtiles","text":"MBTiles es un formato de archivo para almacenar conjuntos de teselas. Est\u00e1 dise\u00f1ado para que pueda empaquetar los potencialmente miles de archivos que componen un conjunto de teselas y moverlos, usarlos en una aplicaci\u00f3n web o m\u00f3vil. MBTiles es una especificaci\u00f3n abierta y se basa en la base de datos SQLite. MBTiles puede contener conjunto de teselas reaster y/o vector. MBTiles es una especificaci\u00f3n compacta y restrictiva. S\u00f3lo admite datos teselados, incluidas teselas vectoriales o de im\u00e1genes y UTFGrid (hasta la versi\u00f3n 1.2). S\u00f3lo la proyecci\u00f3n esf\u00e9rica de Mercator es soportada para la presentaci\u00f3n (visualizaci\u00f3n) y s\u00f3lo se admiten coordenadas de latitud y longitud para metadatos, como l\u00edmites y centros. Es una especificaci\u00f3n m\u00ednima, que sol\u00f3 especifica las formas en que los datos deben ser recuperables. Por lo tanto, los archivos MBTiles pueden comprimir y optimizar datos internamente, y construir vistas que se adhieren a la especificaci\u00f3n MBTiles. Dentro del MBtiles los vectores estan almacenados comprimidos (gzip) y en formato pbf. A diferencia de Spatialite, GeoJSON y Rasterlite, MBTiles no es un almacenamiento de datos sin formato. Es almacenamiento de datos en teselas.","title":"MBTiles"},{"location":"1_teoria/#tilejson","text":"TileJSON es un formato para describir un conjunto de teselas. Realiza un seguimiento de d\u00f3nde solicitar el conjunto de teselas, el nombre del conjunto de teselas y cualquier atribuci\u00f3n que sea necesaria al utilizar el conjunto de teselas. Esta especificaci\u00f3n intenta crear un est\u00e1ndar para representar metadatos sobre m\u00faltiples tipos de capas, para ayudar a los clientes en la configuraci\u00f3n y navegaci\u00f3n.","title":"tilejson"},{"location":"1_teoria/#overzoom","text":"Overzooming es una t\u00e9cnica espec\u00edfica de teselas vectorial que permite que una tesela se represente m\u00e1s all\u00e1 de su nivel de zoom previsto, por lo que contin\u00faa siendo visible en el mapa. Si un conjunto de teselas tiene un minzoom de 6 y un maxzoom de 12, esos son los rangos v\u00e1lidos calculados por el generador de teselas. Si ampliara el mapa m\u00e1s all\u00e1 del nivel de zoom 12, el renderizador del mapa puede seguir utilizando los datos del zoom 12 escalando los datos del vector hacia arriba. Esto, por supuesto, puede dar lugar a grandes simplificaciones de datos si las geometr\u00edas se representan demasiado por encima de su nivel real de detalle. Las teselas raster pierden claridad si ocurre overzoom. Por ejemplo, si est\u00e1 visualizando un conjunto de teselas raster con una extensi\u00f3n de zoom entre z0 y z6, si hace un zoom a un nivel de zoom m\u00e1s alto despu\u00e9s de z6, las im\u00e1genes se volver\u00e1n borrosas y dif\u00edciles de ver. Los efectos del overzoom no son tan notables con las teselas vector, ya que los datos vectoriales no se almacenan en un formato basado en p\u00edxeles, sino que se codifican y calculan a partir de una serie de puntos, l\u00edneas y pol\u00edgonos. Overzoom nivel zoom 16 vs nivel zoom 19.","title":"Overzoom"},{"location":"1_teoria/#presentacion-de-ejemplos-visuales-hechos-con-vt","text":"","title":"Presentaci\u00f3n de ejemplos visuales hechos con vt"},{"location":"1_teoria/#terreno","text":"https://openicgc.github.io/","title":"Terreno"},{"location":"1_teoria/#luces-la","text":"","title":"Luces LA"},{"location":"1_teoria/#edificios-con-musica","text":"https://codepen.io/jwhazel/pen/NYzpWG blog explicativo https://medium.com/@erdag/mappox-mapmadness18-round-4-1251a8c10421","title":"Edificios con m\u00fasica"},{"location":"1_teoria/#tematico-filtro","text":"","title":"Tem\u00e1tico filtro"},{"location":"1_teoria/#filtrado-al-vuelo","text":"","title":"Filtrado al vuelo"},{"location":"1_teoria/#mapa-de-calor","text":"","title":"Mapa de calor"},{"location":"2_visor_simple/","text":"C\u00f3mo visualizar teselas vectoriales Hola Mapa Vamos a crear un fichero barcelona.html . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/streets-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); / script / body / html Resultado visor simple Inspector de datos El control mapbox-gl-inspect permite ver todos los elementos de un VT y tambi\u00e9n permite pasar el cursor sobre los elementos para ver sus propiedades. Agregar el c\u00f3digo de la librer\u00eda, e instanciar el control tras crear el mapa: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / link href = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.css rel = stylesheet / script src = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.min.js / script style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/streets-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); / script / body / html Recargar la p\u00e1gina en el navegador y ver que aparece un nuevo bot\u00f3n que permite la \"visi\u00f3n de rayos X\" sobre los datos. Inspect Contenido de un fichero de estilo Como vemos, el visor es muy sencillo, y parece que toda la \"magia\" se esconde en el fichero de estilo tras la URL mapbox://styles/mapbox/streets-v9 que la API de Mapbox GL JS transforma en https://api.mapbox.com/styles/v1/mapbox/streets-v9?access_token=pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw . Si lo abrimos, es un objeto JSON bastante complejo, pero si nos fijamos en las propiedades de primer nivel, son pocas. Las principales: 1 2 3 4 5 6 7 8 { version : 8 , name : Mapbox Streets , sprite : mapbox://sprites/mapbox/streets-v9 , glyphs : mapbox://fonts/mapbox/{fontstack}/{range}.pbf , sources : { ... }, layers : [ ... ] } version es obligatoria y siempre es 8. name es opcional pero conveniente, es una etiqueta para mostrar el nombre del estilo. sprite indica de d\u00f3nde obtener el conjunto de iconos necesarios para simbolizar. glyphs : indica de d\u00f3nde obtener el conjunto de tipograf\u00edas necesarios para simbolizar. sources : los or\u00edgenes de datos. layers : las reglas de simbolizaci\u00f3n. El orden es importante: Se van dibujando de la primera (que queda por debajo) a la \u00faltima (que queda por encima). As\u00ed, la primera regla suele ser el color de fondo del mapa, y las \u00faltimas suelen ser la toponimia o los PoIs. En los pr\u00f3ximos cap\u00edtulos veremos en detalle c\u00f3mo usar sources , layers , sprites y glyphs . Habitualmente tambi\u00e9n se usan otras propiedades para indicar la vista inicial del mapa. Por ejemplo: 1 2 3 4 5 6 7 { ... center : [ 2.15 , 41.39 ], zoom : 12 , bearing : -45 , pitch : 0 } center : Coordenadas iniciales donde centrar el mapa [lon, lat] zoom : Zoom inicial del mapa bearing : Rotaci\u00f3n inicial del mapa (en grados) pitch : Inclinaci\u00f3n inicial del mapa para verlo en perspectiva (de 0 a 60 grados) Tip La especificaci\u00f3n completa del fichero de estilo es parte de la documentaci\u00f3n on-line de Mapbox GL JS . Tip Si quisi\u00e9ramos editar el fichero de estilo, basta con guardarnos una copia local junto a barcelona.html y modificar la propiedad style para apuntar a una URL relativa. Lo veremos con m\u00e1s detalle en el punto 6.","title":"2. C\u00f3mo visualizarlas"},{"location":"2_visor_simple/#como-visualizar-teselas-vectoriales","text":"","title":"C\u00f3mo visualizar teselas vectoriales"},{"location":"2_visor_simple/#hola-mapa","text":"Vamos a crear un fichero barcelona.html . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/streets-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); / script / body / html Resultado visor simple","title":"Hola Mapa"},{"location":"2_visor_simple/#inspector-de-datos","text":"El control mapbox-gl-inspect permite ver todos los elementos de un VT y tambi\u00e9n permite pasar el cursor sobre los elementos para ver sus propiedades. Agregar el c\u00f3digo de la librer\u00eda, e instanciar el control tras crear el mapa: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / link href = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.css rel = stylesheet / script src = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.min.js / script style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/streets-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); / script / body / html Recargar la p\u00e1gina en el navegador y ver que aparece un nuevo bot\u00f3n que permite la \"visi\u00f3n de rayos X\" sobre los datos. Inspect","title":"Inspector de datos"},{"location":"2_visor_simple/#contenido-de-un-fichero-de-estilo","text":"Como vemos, el visor es muy sencillo, y parece que toda la \"magia\" se esconde en el fichero de estilo tras la URL mapbox://styles/mapbox/streets-v9 que la API de Mapbox GL JS transforma en https://api.mapbox.com/styles/v1/mapbox/streets-v9?access_token=pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw . Si lo abrimos, es un objeto JSON bastante complejo, pero si nos fijamos en las propiedades de primer nivel, son pocas. Las principales: 1 2 3 4 5 6 7 8 { version : 8 , name : Mapbox Streets , sprite : mapbox://sprites/mapbox/streets-v9 , glyphs : mapbox://fonts/mapbox/{fontstack}/{range}.pbf , sources : { ... }, layers : [ ... ] } version es obligatoria y siempre es 8. name es opcional pero conveniente, es una etiqueta para mostrar el nombre del estilo. sprite indica de d\u00f3nde obtener el conjunto de iconos necesarios para simbolizar. glyphs : indica de d\u00f3nde obtener el conjunto de tipograf\u00edas necesarios para simbolizar. sources : los or\u00edgenes de datos. layers : las reglas de simbolizaci\u00f3n. El orden es importante: Se van dibujando de la primera (que queda por debajo) a la \u00faltima (que queda por encima). As\u00ed, la primera regla suele ser el color de fondo del mapa, y las \u00faltimas suelen ser la toponimia o los PoIs. En los pr\u00f3ximos cap\u00edtulos veremos en detalle c\u00f3mo usar sources , layers , sprites y glyphs . Habitualmente tambi\u00e9n se usan otras propiedades para indicar la vista inicial del mapa. Por ejemplo: 1 2 3 4 5 6 7 { ... center : [ 2.15 , 41.39 ], zoom : 12 , bearing : -45 , pitch : 0 } center : Coordenadas iniciales donde centrar el mapa [lon, lat] zoom : Zoom inicial del mapa bearing : Rotaci\u00f3n inicial del mapa (en grados) pitch : Inclinaci\u00f3n inicial del mapa para verlo en perspectiva (de 0 a 60 grados) Tip La especificaci\u00f3n completa del fichero de estilo es parte de la documentaci\u00f3n on-line de Mapbox GL JS . Tip Si quisi\u00e9ramos editar el fichero de estilo, basta con guardarnos una copia local junto a barcelona.html y modificar la propiedad style para apuntar a una URL relativa. Lo veremos con m\u00e1s detalle en el punto 6.","title":"Contenido de un fichero de estilo"},{"location":"3_publicar/","text":"C\u00f3mo publicar datos en un formato geojson a teselas vectoriales (mapbox online) Crear cuenta en Mapbox Visitar la p\u00e1gina https://www.mapbox.com/signup/ y crear una cuenta gratuita. Subir GeoJSON a Mapbox Hacer login en la cuenta de Mapbox y seleccionar primero la opci\u00f3n de Studio y luego la pesta\u00f1a de Datasets , tambi\u00e9n se puede ir directamente desde https://www.mapbox.com/studio/datasets/ . El apartado de Datasets es donde se pueden subir los datos o crear un conjunto de datos desde cero. Para subir un cojunto de datos presionar el bot\u00f3n de New dataset . Seleccionar la pesta\u00f1a de Upload en la ventana que se despliega y arrastrar o seleccionar el archivo que se desea subir. Los formatos de archivos soportados son GeoJSON, JSON y CSV. En la carpeta downloads encontrar algunos archivos en formato GeoJSON. Subir los archivos 08019_carril_bici , 08019_punts_ancoratge_bicicletes y 08019_stations . Al subir los archivos renombrarlos a carril_bici , punts_ancoratge_bicicletes y stations respectivamente. Para poder dar estilo y utilizar los datos primero hay que convertilos en un Tileset . Para convertirlo presionar el bot\u00f3n de Menu y seleccionar la opci\u00f3n de Export to tileset . En la ventana que se despliega seleccioanr la opc\u00edon de Export to a new tileset y presionar el bot\u00f3n de Export . Visualizar los datos en el visor Modificar el archivo barcelona.html para que contenga el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / link href = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.css rel = stylesheet / script src = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.min.js / script style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/streets-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); map . on ( load , function () { map . addSource ( stations , { type : vector , url : MAP ID DEL TILESET }); map . addLayer ({ id : stations , type : circle , source : stations , layout : { visibility : visible }, paint : { circle-radius : 8 , circle-color : rgba(55,148,179,1) }, source-layer : stations }); }); / script / body / html Para obtener el Map ID del tileset seleccionar la pesta\u00f1a Tilesets y presionar el bot\u00f3n Menu de la capa de stations. Copiar el Map ID . Remplazar donde dice MAP ID DEL TILESET por el id copiado. Ejemplo de identificador mapbox://bolollo.cjmtjlsp30e2232lk64u3a3zm-5dzl6 Recargar la p\u00e1gina del mapa y se deben ver los puntos de las estaciones de Bicing en el mapa. Resultado visor con estaciones de Bicing","title":"3. C\u00f3mo publicar datos en un formato geojson a teselas vectoriales (mapbox online)"},{"location":"3_publicar/#como-publicar-datos-en-un-formato-geojson-a-teselas-vectoriales-mapbox-online","text":"","title":"C\u00f3mo publicar datos en un formato geojson a teselas vectoriales (mapbox online)"},{"location":"3_publicar/#crear-cuenta-en-mapbox","text":"Visitar la p\u00e1gina https://www.mapbox.com/signup/ y crear una cuenta gratuita.","title":"Crear cuenta en Mapbox"},{"location":"3_publicar/#subir-geojson-a-mapbox","text":"Hacer login en la cuenta de Mapbox y seleccionar primero la opci\u00f3n de Studio y luego la pesta\u00f1a de Datasets , tambi\u00e9n se puede ir directamente desde https://www.mapbox.com/studio/datasets/ . El apartado de Datasets es donde se pueden subir los datos o crear un conjunto de datos desde cero. Para subir un cojunto de datos presionar el bot\u00f3n de New dataset . Seleccionar la pesta\u00f1a de Upload en la ventana que se despliega y arrastrar o seleccionar el archivo que se desea subir. Los formatos de archivos soportados son GeoJSON, JSON y CSV. En la carpeta downloads encontrar algunos archivos en formato GeoJSON. Subir los archivos 08019_carril_bici , 08019_punts_ancoratge_bicicletes y 08019_stations . Al subir los archivos renombrarlos a carril_bici , punts_ancoratge_bicicletes y stations respectivamente. Para poder dar estilo y utilizar los datos primero hay que convertilos en un Tileset . Para convertirlo presionar el bot\u00f3n de Menu y seleccionar la opci\u00f3n de Export to tileset . En la ventana que se despliega seleccioanr la opc\u00edon de Export to a new tileset y presionar el bot\u00f3n de Export .","title":"Subir GeoJSON a Mapbox"},{"location":"3_publicar/#visualizar-los-datos-en-el-visor","text":"Modificar el archivo barcelona.html para que contenga el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / link href = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.css rel = stylesheet / script src = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.min.js / script style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/streets-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); map . on ( load , function () { map . addSource ( stations , { type : vector , url : MAP ID DEL TILESET }); map . addLayer ({ id : stations , type : circle , source : stations , layout : { visibility : visible }, paint : { circle-radius : 8 , circle-color : rgba(55,148,179,1) }, source-layer : stations }); }); / script / body / html Para obtener el Map ID del tileset seleccionar la pesta\u00f1a Tilesets y presionar el bot\u00f3n Menu de la capa de stations. Copiar el Map ID . Remplazar donde dice MAP ID DEL TILESET por el id copiado. Ejemplo de identificador mapbox://bolollo.cjmtjlsp30e2232lk64u3a3zm-5dzl6 Recargar la p\u00e1gina del mapa y se deben ver los puntos de las estaciones de Bicing en el mapa. Resultado visor con estaciones de Bicing","title":"Visualizar los datos en el visor"},{"location":"4_estilos/","text":"C\u00f3mo simbolizarlas (mapbox studio) Para dar estilo a las Teselas Vectoriales utilizando la librer\u00eda de Mapbox GL hay que seguir la especificaci\u00f3n de estilo de Mapbox https://www.mapbox.com/mapbox-gl-js/style-spec . La definici\u00f3n del estilo se describe en un JSON. Para facilitar la creaci\u00f3n del JSON de estilo Mapbox ha creado el Mapbox Studio que permite crear un estilo f\u00e1cilmente de forma visual. Crear un estilo simple Para crear un estilo hay que seleccionar la pesta\u00f1a Styles dentro del Mapbox Studio. Se puede crear un estilo desde cero o se puede utilizar alg\u00fan template de los que ofrece Mapbox. Seleccionar la opci\u00f3n de More options Pick a template or upload a style . En la ventana que se muestra presionar el bot\u00f3n Create del estilo Dark Template estilo dark Agregar la capa de datos El template seleccionado ya tiene una serie de capas que sirven como capas base o capas de referencia. La vista inicial est\u00e1 centrada en Boston as\u00ed que lo primero que tenemos que hacer es navegar por el mapa y centrar la vista en Barcelona. Para agregar una capa nueva presionar el bot\u00f3n + Add layer . En la ventana que se despliega seleccionar la fuente de datos ( Source ) de carril_bici . Para dar estilo a la capa seleccionar la pesta\u00f1a de Style . Cambiar el color por defecto (negro) por un color que resalte sobre el mapa. Por ejemplo un magenta (#c753ee). Cambiar la propiedad ancho ( Width ) de la l\u00ednea a 2px. Una vez definido el estilo presionar el bot\u00f3n Publish . Aparece una ventana que permite compara la versi\u00f3n previa publicada con la nueva versi\u00f3n de nuestro estilo. Al presionar el bot\u00f3n Publish aparece una nueva ventana que contiene 2 pesta\u00f1as: Share: indica la url de nuestro estilo. Use: muestra varias opciones de c\u00f3digo para usar en diferentes plataformas. En nuestro caso nos interesa la opci\u00f3n Web . En la opci\u00f3n Web aparte del ejemplo de c\u00f3digo para usar en una p\u00e1gina web se muestra nuestro access token y la URL del estilo. Datos estilo carril bici Visualizar el estilo Modificar el archivo barcelona.html para que muestre nuestro estilo. El archivo contendr\u00e1 el siguiente c\u00f3digo: Actualizar el access token y la url del estilo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / link href = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.css rel = stylesheet / script src = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.min.js / script style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/bolollo/cjmutm5tmb0ji2rlc3ushd4ug , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); / script / body / html Recargar la p\u00e1gina del mapa y se deben ver los carriles bici en el mapa. Estilo carril bici Estilo por rango de valores Cargar la capa de estaciones de bicing ( stations ) en el estilo. En la propiedad de Radius seleccionar la opci\u00f3n Style across data range . Se despliega una ventana con los atributos de tipo n\u00famerico de la capa. Seleccionar el atributo slots (que representa la capacidad de bicicletas de la estaci\u00f3n de bicing). Se muestra una ventana con 2 opciones de estilo una para el valor m\u00ednimo del campo y otra para el m\u00e1ximo. Si se quiere se pueden agregar m\u00e1s rangos de valores. Seleccionar la opci\u00f3n del valor m\u00e1ximo (slots 33) y cambiar el valor de Circle radius por 15px. Presionar el bot\u00f3n de Done . Vemos que el tama\u00f1o de los circulos que representan las estaciones de bicing vari\u00e1n dependiendo de la capacidad de la estaci\u00f3n. En la propiedad de Color seleccionar la opci\u00f3n Style across data range . En este caso seleccionar el atributo bikes (que representa el n\u00famero de bicicletas disponibles en la estaci\u00f3n). Para la primera opc\u00edon (que ser\u00edan las estaciones con 0 bicis disponibles) seleccionar un color rojo (#f91a1a). Para la segunda opci\u00f3n (bikes 37) seleccionar un color verde (#7cfa52). Presionar el bot\u00f3n de Done . Vemos que el color de los circulos que representan las estaciones de bicing vari\u00e1n dependiendo de la disponibilidad de bicis de la estaci\u00f3n. Presionamos el bot\u00f3n Publish para publicar los cambios. Vemos que la URL del estilo se mantiene, as\u00ed que no tenemos que modificar nada en nuestra p\u00e1gina. Recargar la p\u00e1gina del mapa y se deben ver los carriles bici y las estaciones en el mapa. Estilo carril bici + estaciones Estilo por nivel de zoom Cargar la capa de puntos de anclaje de bicicletas ( punts_ancoratge_bicicletes ) en el estilo. Cambiar el tipo de capa ( Type ) de Circle a Symbol. Esto nos permitir\u00e1 simbolizar la capa con un icono o una etiqueta. Cambiar la visibilidad de la capa ( Zoom extent ) a Min = 11 y Max = 22. En la propiedad Text field en lugar de seleccionar un atributo de la capa escribir PB En la propiedad Color seleccionar un amarillo (#f3ca16) En la propiedad Size seleccionar la opci\u00f3n Style across zoom range . Se muestra una ventana con 2 opciones de estilo una para el valor m\u00ednimo del zoom del mapa y otra para el m\u00e1ximo. Para primera opci\u00f3n cambiamos el valor de zoom a 11 y el Text size a 5px. Para la segunda opci\u00f3n Zoom 22 cambiar el Text size a 22px. Presionar el bot\u00f3n de Done . Si hacemos zoom en el mapa vemos que el tama\u00f1o de la letra var\u00eda seg\u00fan el nivel de zoom. Mientras m\u00e1s nos acercamos m\u00e1s grande es la letra. Presionamos el bot\u00f3n Publish para publicar los cambios. Vemos que la URL del estilo se mantiene, as\u00ed que no tenemos que modificar nada en nuestra p\u00e1gina. Recargar la p\u00e1gina del mapa y se deben ver los carriles bici, las estaciones en el mapa y los puntos de anclaje. Estilo carril bici + estaciones + anclajes","title":"4. C\u00f3mo simbolizarlas (mapbox studio)"},{"location":"4_estilos/#como-simbolizarlas-mapbox-studio","text":"Para dar estilo a las Teselas Vectoriales utilizando la librer\u00eda de Mapbox GL hay que seguir la especificaci\u00f3n de estilo de Mapbox https://www.mapbox.com/mapbox-gl-js/style-spec . La definici\u00f3n del estilo se describe en un JSON. Para facilitar la creaci\u00f3n del JSON de estilo Mapbox ha creado el Mapbox Studio que permite crear un estilo f\u00e1cilmente de forma visual.","title":"C\u00f3mo simbolizarlas (mapbox studio)"},{"location":"4_estilos/#crear-un-estilo-simple","text":"Para crear un estilo hay que seleccionar la pesta\u00f1a Styles dentro del Mapbox Studio. Se puede crear un estilo desde cero o se puede utilizar alg\u00fan template de los que ofrece Mapbox. Seleccionar la opci\u00f3n de More options Pick a template or upload a style . En la ventana que se muestra presionar el bot\u00f3n Create del estilo Dark Template estilo dark","title":"Crear un estilo simple"},{"location":"4_estilos/#agregar-la-capa-de-datos","text":"El template seleccionado ya tiene una serie de capas que sirven como capas base o capas de referencia. La vista inicial est\u00e1 centrada en Boston as\u00ed que lo primero que tenemos que hacer es navegar por el mapa y centrar la vista en Barcelona. Para agregar una capa nueva presionar el bot\u00f3n + Add layer . En la ventana que se despliega seleccionar la fuente de datos ( Source ) de carril_bici . Para dar estilo a la capa seleccionar la pesta\u00f1a de Style . Cambiar el color por defecto (negro) por un color que resalte sobre el mapa. Por ejemplo un magenta (#c753ee). Cambiar la propiedad ancho ( Width ) de la l\u00ednea a 2px. Una vez definido el estilo presionar el bot\u00f3n Publish . Aparece una ventana que permite compara la versi\u00f3n previa publicada con la nueva versi\u00f3n de nuestro estilo. Al presionar el bot\u00f3n Publish aparece una nueva ventana que contiene 2 pesta\u00f1as: Share: indica la url de nuestro estilo. Use: muestra varias opciones de c\u00f3digo para usar en diferentes plataformas. En nuestro caso nos interesa la opci\u00f3n Web . En la opci\u00f3n Web aparte del ejemplo de c\u00f3digo para usar en una p\u00e1gina web se muestra nuestro access token y la URL del estilo. Datos estilo carril bici","title":"Agregar la capa de datos"},{"location":"4_estilos/#visualizar-el-estilo","text":"Modificar el archivo barcelona.html para que muestre nuestro estilo. El archivo contendr\u00e1 el siguiente c\u00f3digo: Actualizar el access token y la url del estilo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 !DOCTYPE html html head meta charset = UTF-8 meta name = viewport content = width=device-width, initial-scale=1 title Mapa VT / title script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css rel = stylesheet / link href = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.css rel = stylesheet / script src = https://mapbox-gl-inspect.lukasmartinelli.ch/dist/mapbox-gl-inspect.min.js / script style html , body { margin : 0 ; height : 100 % ; } / style / head body id = map script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/bolollo/cjmutm5tmb0ji2rlc3ushd4ug , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); / script / body / html Recargar la p\u00e1gina del mapa y se deben ver los carriles bici en el mapa. Estilo carril bici","title":"Visualizar el estilo"},{"location":"4_estilos/#estilo-por-rango-de-valores","text":"Cargar la capa de estaciones de bicing ( stations ) en el estilo. En la propiedad de Radius seleccionar la opci\u00f3n Style across data range . Se despliega una ventana con los atributos de tipo n\u00famerico de la capa. Seleccionar el atributo slots (que representa la capacidad de bicicletas de la estaci\u00f3n de bicing). Se muestra una ventana con 2 opciones de estilo una para el valor m\u00ednimo del campo y otra para el m\u00e1ximo. Si se quiere se pueden agregar m\u00e1s rangos de valores. Seleccionar la opci\u00f3n del valor m\u00e1ximo (slots 33) y cambiar el valor de Circle radius por 15px. Presionar el bot\u00f3n de Done . Vemos que el tama\u00f1o de los circulos que representan las estaciones de bicing vari\u00e1n dependiendo de la capacidad de la estaci\u00f3n. En la propiedad de Color seleccionar la opci\u00f3n Style across data range . En este caso seleccionar el atributo bikes (que representa el n\u00famero de bicicletas disponibles en la estaci\u00f3n). Para la primera opc\u00edon (que ser\u00edan las estaciones con 0 bicis disponibles) seleccionar un color rojo (#f91a1a). Para la segunda opci\u00f3n (bikes 37) seleccionar un color verde (#7cfa52). Presionar el bot\u00f3n de Done . Vemos que el color de los circulos que representan las estaciones de bicing vari\u00e1n dependiendo de la disponibilidad de bicis de la estaci\u00f3n. Presionamos el bot\u00f3n Publish para publicar los cambios. Vemos que la URL del estilo se mantiene, as\u00ed que no tenemos que modificar nada en nuestra p\u00e1gina. Recargar la p\u00e1gina del mapa y se deben ver los carriles bici y las estaciones en el mapa. Estilo carril bici + estaciones","title":"Estilo por rango de valores"},{"location":"4_estilos/#estilo-por-nivel-de-zoom","text":"Cargar la capa de puntos de anclaje de bicicletas ( punts_ancoratge_bicicletes ) en el estilo. Cambiar el tipo de capa ( Type ) de Circle a Symbol. Esto nos permitir\u00e1 simbolizar la capa con un icono o una etiqueta. Cambiar la visibilidad de la capa ( Zoom extent ) a Min = 11 y Max = 22. En la propiedad Text field en lugar de seleccionar un atributo de la capa escribir PB En la propiedad Color seleccionar un amarillo (#f3ca16) En la propiedad Size seleccionar la opci\u00f3n Style across zoom range . Se muestra una ventana con 2 opciones de estilo una para el valor m\u00ednimo del zoom del mapa y otra para el m\u00e1ximo. Para primera opci\u00f3n cambiamos el valor de zoom a 11 y el Text size a 5px. Para la segunda opci\u00f3n Zoom 22 cambiar el Text size a 22px. Presionar el bot\u00f3n de Done . Si hacemos zoom en el mapa vemos que el tama\u00f1o de la letra var\u00eda seg\u00fan el nivel de zoom. Mientras m\u00e1s nos acercamos m\u00e1s grande es la letra. Presionamos el bot\u00f3n Publish para publicar los cambios. Vemos que la URL del estilo se mantiene, as\u00ed que no tenemos que modificar nada en nuestra p\u00e1gina. Recargar la p\u00e1gina del mapa y se deben ver los carriles bici, las estaciones en el mapa y los puntos de anclaje. Estilo carril bici + estaciones + anclajes","title":"Estilo por nivel de zoom"},{"location":"5_visor_completo/","text":"C\u00f3mo consumirlas (mapbox gl js) \u00bfY sin teselas? Cargar datos directamente en GeoJSON 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/dark-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); map . on ( load , function () { map . addSource ( metro , { type : geojson , data : http://mappingandco.github.io/geojsonDB/barcelona/subway.geojson }); map . addLayer ({ id : metro , source : metro , type : line , paint : { line-color : [ get , stroke ], line-width : 4 } }); }); / script Demo GeoJSON Ejemplo interactivo Documentaci\u00f3n Tipos de source en Mapbox GL Tipos de layer en Mapbox GL Expresiones en Mapbox GL Selecci\u00f3n y filtrado 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 script map . on ( load , function () { map . addSource ( metro , { type : geojson , data : http://mappingandco.github.io/geojsonDB/barcelona/subway.geojson }); map . addLayer ({ id : metro , type : line , source : metro , paint : { line-color : [ get , stroke ], line-width : 4 } }); map . addLayer ({ id : metro-highlighted , type : line , source : metro , paint : { line-color : [ get , stroke ], line-width : 21 }, filter : [ in , OGC_FID , ] }); map . on ( mousemove , metro , function ( e ) { if ( e . features . length 0 ) { var feature = e . features [ 0 ]; map . setFilter ( metro-highlighted , [ in , OGC_FID , feature . properties . OGC_FID ]); } }); map . on ( mouseleave , metro , function () { map . setFilter ( metro-highlighted , [ in , OGC_FID , ]); overlay . style . display = none ; }); }); / script Demo Hover Ejemplo interactivo Documentaci\u00f3n Eventos de mapa en Mapbox GL Extrusi\u00f3n 3D 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 map . addSource ( buildings , { type : vector , url : http://tileserver.fonts.cat/data/buildingpart.json }); map . addLayer ({ id : buildings , source : buildings , source-layer : buildingpart , type : fill-extrusion , paint : { fill-extrusion-opacity : 0.75 , fill-extrusion-color : #808080 , fill-extrusion-height : [ * , 3 , [ get , floors ]] } }); Demo Edificios 3D Ejemplo interactivo","title":"5. C\u00f3mo consumirlas (mapbox gl js)"},{"location":"5_visor_completo/#como-consumirlas-mapbox-gl-js","text":"","title":"C\u00f3mo consumirlas (mapbox gl js)"},{"location":"5_visor_completo/#y-sin-teselas-cargar-datos-directamente-en-geojson","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 script mapboxgl . accessToken = pk.eyJ1IjoiYm9sb2xsbyIsImEiOiI3MDlqRnJJIn0.m-zCTI_UaEOCiCakGUDwcw ; var map = new mapboxgl . Map ({ container : map , // id del elemento HTML que contendr\u00e1 el mapa style : mapbox://styles/mapbox/dark-v9 , // Ubicaci\u00f3n del estilo center : [ 2.175 , 41.39 ], // Ubicaci\u00f3n inicial zoom : 13 , // Zoom inicial bearing : - 45 , // \u00c1ngulo de rotaci\u00f3n inicial hash : true // Permite ir guardando la posici\u00f3n del mapa en la URL }); // Agrega controles de navegaci\u00f3n (zoom, rotaci\u00f3n) al mapa: map . addControl ( new mapboxgl . NavigationControl ()); // Agregar el control de inspecci\u00f3n map . addControl ( new MapboxInspect ()); map . on ( load , function () { map . addSource ( metro , { type : geojson , data : http://mappingandco.github.io/geojsonDB/barcelona/subway.geojson }); map . addLayer ({ id : metro , source : metro , type : line , paint : { line-color : [ get , stroke ], line-width : 4 } }); }); / script Demo GeoJSON Ejemplo interactivo Documentaci\u00f3n Tipos de source en Mapbox GL Tipos de layer en Mapbox GL Expresiones en Mapbox GL","title":"\u00bfY sin teselas? Cargar datos directamente en GeoJSON"},{"location":"5_visor_completo/#seleccion-y-filtrado","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 script map . on ( load , function () { map . addSource ( metro , { type : geojson , data : http://mappingandco.github.io/geojsonDB/barcelona/subway.geojson }); map . addLayer ({ id : metro , type : line , source : metro , paint : { line-color : [ get , stroke ], line-width : 4 } }); map . addLayer ({ id : metro-highlighted , type : line , source : metro , paint : { line-color : [ get , stroke ], line-width : 21 }, filter : [ in , OGC_FID , ] }); map . on ( mousemove , metro , function ( e ) { if ( e . features . length 0 ) { var feature = e . features [ 0 ]; map . setFilter ( metro-highlighted , [ in , OGC_FID , feature . properties . OGC_FID ]); } }); map . on ( mouseleave , metro , function () { map . setFilter ( metro-highlighted , [ in , OGC_FID , ]); overlay . style . display = none ; }); }); / script Demo Hover Ejemplo interactivo Documentaci\u00f3n Eventos de mapa en Mapbox GL","title":"Selecci\u00f3n y filtrado"},{"location":"5_visor_completo/#extrusion-3d","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 map . addSource ( buildings , { type : vector , url : http://tileserver.fonts.cat/data/buildingpart.json }); map . addLayer ({ id : buildings , source : buildings , source-layer : buildingpart , type : fill-extrusion , paint : { fill-extrusion-opacity : 0.75 , fill-extrusion-color : #808080 , fill-extrusion-height : [ * , 3 , [ get , floors ]] } }); Demo Edificios 3D Ejemplo interactivo","title":"Extrusi\u00f3n 3D"},{"location":"6_documentacion/","text":"Donde est\u00e1 la documentacion y los ejemplos WebVMT linked to an embedded YouTube video (Viaje en tren Londres - Brighton) http://webvmt.org/demos/youtube Trenes en tiempo real Londres https://traintimes.org.uk/map/tube/schematic/","title":"6. Donde est\u00e1 la documentacion y los ejemplos"},{"location":"6_documentacion/#donde-esta-la-documentacion-y-los-ejemplos","text":"WebVMT linked to an embedded YouTube video (Viaje en tren Londres - Brighton) http://webvmt.org/demos/youtube Trenes en tiempo real Londres https://traintimes.org.uk/map/tube/schematic/","title":"Donde est\u00e1 la documentacion y los ejemplos"}]}